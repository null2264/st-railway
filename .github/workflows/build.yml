name: Build Docker Image

on:
  push:

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Setup matrix
        id: matrix
        run: echo "matrix=$(uv run main.py)" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: setup
    permissions:
      contents: write
      packages: write
      id-token: write

    strategy:
      fail-fast: false  # Don't cancel if one failed
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from Dockerfile name and setup Dockerfile
        id: extract_version
        run: |
          __version="Dockerfile.${{ matrix.version }}"
          version="${{ matrix.version }}"
          echo "version=$version" >> $GITHUB_OUTPUT
          mv --no-clobber config.latest.yaml "config.$version.yaml" || true
          cat Dockerfile.template | sed "s/%VERSION%/$version/g" > "$__version"
        shell: bash

      - name: Build and Publish
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ steps.extract_version.outputs.version }}
